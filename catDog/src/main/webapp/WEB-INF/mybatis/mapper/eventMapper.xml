<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="event">
	<select id="seq" resultType="Integer">
		SELECT event_seq.NEXTVAL FROM dual
	</select>
	
	<insert id="insertEvent" parameterType="com.catDog.event.Event">
		INSERT INTO EVENT(eventNum, num, subject, content, startDate, endDate)
		VALUES (#{eventNum}, #{num}, #{subject}, #{content}, #{startDate}, #{endDate})
	</insert>
	
	<insert id="insertImgFile" parameterType="com.catDog.event.Event">
		INSERT INTO EVENTPIC(eventPicNum, imageFileName, eventNum)
		VALUES (eventPic_seq.NEXTVAL, #{imageFileName}, #{eventNum})
	</insert>
	
	<select id="listEvent" parameterType="map" resultType="com.catDog.event.Event">
		SELECT e.eventNum, e.num, e.subject, e.content, e.hitCount, ep.imageFileName, e.startDate, e.endDate
		FROM event e JOIN eventPic ep ON e.eventNum = ep.eventNum
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
			<if test="sort=='ing'">
				AND e.endDate &gt; SYSDATE
			</if>
			<if test="sort=='end'">
				AND e.endDate &lt; SYSDATE
			</if>
			AND INSTR(ep.imageFileName, 'main') &gt; 0
		</where>
		ORDER BY e.eventNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<sql id="where-list">
		<if test="condition=='all'">
			(INSTR(subject, #{keyword}) &gt; 0 OR INSTR(content, #{keyword}) &gt; 0)
		</if>
		<if test="condition=='subject'">
			INSTR(subject, #{keyword}) &gt; 0
		</if>
		<if test="condition=='content'">
			INSTR(content, #{keyword}) &gt; 0
		</if>
	</sql>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM event e
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<select id="readEvent" parameterType="Integer" resultType="com.catDog.event.Event">
		SELECT e.eventNum, e.num, e.subject, e.content, e.hitCount, TO_CHAR(e.created, 'yyyy.mm.dd') created, e.startDate, e.endDate, ep.eventPicNum, ep.imageFileName
		FROM event e JOIN eventPic ep ON e.eventNum = ep.eventNum
		WHERE e.eventNum=#{eventNum} AND INSTR(ep.imageFileName, 'main') = 0
	</select>
	
	<select id="upReEvent" parameterType="Integer" resultType="com.catDog.event.Event">
		SELECT e.eventNum, e.num, e.subject, e.content, e.hitCount, TO_CHAR(e.created, 'yyyy.mm.dd') created, e.startDate, e.endDate, ep.eventPicNum, ep.imageFileName
		FROM event e JOIN eventPic ep ON e.eventNum = ep.eventNum
		WHERE e.eventNum=#{eventNum} 
	</select>
	
	<update id="updateHitCount" parameterType="Integer">
		UPDATE event e SET hitCount=hitCount+1 WHERE eventNum = #{eventNum}
	</update>
	
	<select id="preReadEvent" parameterType="map" resultType="com.catDog.event.Event">
		SELECT eventNum, subject
		FROM event e
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (eventNum &gt; #{eventNum})
		</where>
		ORDER BY eventNum ASC FETCH FIRST 1 ROWS ONLY
	</select>
	
	<select id="nextReadEvent" parameterType="map" resultType="com.catDog.event.Event">
		SELECT eventNum, subject
		FROM event e
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (eventNum &lt; #{eventNum})
		</where>
		ORDER BY eventNum DESC FETCH FIRST 1 ROWS ONLY
	</select>
	
	<update id="updateEvent" parameterType="com.catDog.event.Event">
		UPDATE event SET subject=#{subject}, content=#{content}, startDate=#{startDate}, endDate=#{endDate}
		WHERE eventNum=#{eventNum}
	</update>
	
	<update id="updatePic" parameterType="com.catDog.event.Event">
		UPDATE eventPic SET imageFileName=#{imageFileName} WHERE eventPicNum=#{eventPicNum}
	</update>
	
	<delete id="deleteEvent" parameterType="Integer">
		DELETE FROM event WHERE eventNum=#{eventNum}
	</delete>
	
	<select id="listFile" parameterType="Integer" resultType="com.catDog.event.Event">
		SELECT eventPicNum, eventNum, imageFileName
		FROM eventPic
	    WHERE eventNum=#{eventNum}     
	</select>
	
	<select id="readFile" parameterType="Integer" resultType="com.catDog.event.Event">
		SELECT eventPicNum, eventNum, imageFileName
		FROM eventPic
	    WHERE eventPicNum=#{eventPicNum}      
	</select>
	
	<delete id="deleteFile" parameterType="map">
		DELETE FROM eventPic WHERE ${field} = #{eventPicNum}
	</delete>
	
	<insert id="insertReply" parameterType="com.catDog.event.Reply">
		INSERT INTO eventReply(eventReplyNum, eventNum, num, content, answer)
		VALUES (eventReply_seq.NEXTVAL, #{eventNum}, #{num}, #{content}, #{answer})
	</insert>
	
	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM eventReply
		WHERE eventNum=#{eventNum} AND answer=0
	</select>
	
	<select id="listReply" parameterType="map" resultType="com.catDog.event.Reply">
		SELECT er.eventReplyNum, er.eventNum, m.userId, er.content, er.created, NVL(answerCount, 0) answerCount
		FROM eventReply er JOIN memberDetail m ON er.num = m.num
		LEFT OUTER JOIN (
			SELECT answer, COUNT(*) answerCount
			FROM eventReply WHERE answer !=0 GROUP BY answer
		) a ON er.eventReplyNum = a.answer
		WHERE eventNum=#{eventNum} AND er.answer=0
		ORDER BY er.eventReplyNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<delete id="deleteReply" parameterType="map">
		DELETE FROM eventReply WHERE
		<if test="mode=='reply' ">
			eventReplyNum IN (
				SELECT eventReplyNum FROM eventReply
					START WITH eventReplyNum=#{eventReplyNum}
					CONNECT BY PRIOR eventReplyNum = answer
			)
		</if>
		<if test="mode=='answer' ">
			eventReplyNum = #{eventReplyNum}
		</if>
	</delete>
	
	<select id="listReplyAnswer" parameterType="Integer" resultType="com.catDog.event.Reply">
		SELECT eventReplyNum, er.num, m.userId, er.content, er.created, answer
		FROM eventReply er JOIN memberDetail m ON m.num = er.num
		WHERE answer = #{answer}
		ORDER BY eventReplyNum DESC
	</select>
	
	<select id="replyAnswerCount" parameterType="Integer" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM eventReply WHERE answer = #{answer}
	</select>
</mapper>