<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pay">
	<select id="requestSeq" resultType="Integer">
		SELECT REQUEST_SEQ.NEXTVAL FROM dual
	</select>
	
	<select id="customerSeq" resultType="Long">
		SELECT CUSTOMER_SEQ.NEXTVAL FROM dual
	</select>
	
	<select id="readProduct" parameterType="Integer" resultType="com.catDog.pay.Pay">
		SELECT p.productNum, p.name productName, price, pp.imageFileName 
		FROM product p 
		JOIN productPic pp ON p.productNum = pp.productNum
		WHERE p.productNum=#{productNum} AND INSTR(pp.imageFileName,'main') &gt; 0
	</select>
	
	<insert id="insertCart" parameterType="com.catDog.pay.Pay">
		INSERT INTO cart(cartNum, num, productNum, productCount, productSum) VALUES(CART_SEQ.NEXTVAL, #{num}, #{productNum}, #{productCount}, #{productSum})
	</insert>
	
	<select id="readCart" parameterType="map" resultType="com.catDog.pay.Pay">
		SELECT cartNum, num, productNum, productCount, productSum FROM cart WHERE num = #{num} AND productNum = #{productNum}
	</select>
	  
	<select id="cartList" parameterType="Long" resultType="com.catDog.pay.Pay">
		SELECT cartNum, num, c.productNum, productCount, productSum, pp.imageFileName, p.name productName
		FROM cart c 
		JOIN product p ON c.productNum = p.productNum 
		JOIN productpic pp ON p.productNum = pp.productNum  
		WHERE num=#{num} and INSTR(pp.imagefilename,'main')>0
	</select>
	
	<select id="cartPayList" parameterType="map" resultType="com.catDog.pay.Pay">
		SELECT cartNum, num, c.productNum, productCount, productSum, pp.imageFileName, p.name productName
		FROM cart c 
		JOIN product p ON c.productNum = p.productNum 
		JOIN productpic pp ON p.productNum = pp.productNum 
		WHERE num=#{num} AND INSTR(pp.imagefilename,'main')>0 AND cartNum IN
		<foreach item="cart" collection="list" open="(" close=")" separator=",">
			#{cart}
		</foreach> 
	</select>
	
	<update id="updateCount" parameterType="com.catDog.pay.Pay">
		UPDATE cart SET productCount=#{productCount}, productSum=#{productSum} WHERE cartNum=#{cartNum} AND num=#{num}
	</update>
	
	<delete id="deleteCart" parameterType="map">
		DELETE FROM cart 
		WHERE num=#{num} AND cartNum IN
		<foreach item="cart" collection="list" open="(" close=")" separator=",">
			#{cart}
		</foreach> 
	</delete>
	
	<select id="readCumstomer" parameterType="Long" resultType="com.catDog.pay.Pay">
		SELECT md.num, cd.name, md.userId, md.mileage, cd.email, cd.tel, md.addr1, md.addr2, md.zip
		FROM customerDetail cd
		JOIN memberDetail md ON cd.num = md.num
		WHERE md.num = #{num}
	</select>
	
	<insert id="insertCumstomer" parameterType="com.catDog.pay.Pay">
		INSERT ALL
			INTO customer(num, membership) VALUES(#{num},0)
			INTO customerDetail(num, name, email, tel) VALUES(#{num}, #{name}, #{email}, #{tel})
		SELECT * FROM dual
	</insert>
	
	<insert id="insertRequest" parameterType="com.catDog.pay.Pay">
		INSERT INTO request(requestNum, num, total, addr1, addr2, zip, tel, name, memo)
		VALUES(#{requestNum}, #{num}, #{total},#{deliverAddr1}, #{deliverAddr2}, #{deliverZip}, #{deliverTel}, #{deliverName}, #{memo})
	</insert>
	
	<insert id="insertRequestDetail" parameterType="com.catDog.pay.Pay">
		INSERT INTO requestDetail(requestDetailNum,requestNum, productNum, productCount, productSum)
		VALUES(requestDetail_SEQ.NEXTVAL, #{requestNum}, #{productNum},#{productCount}, #{productSum})
	</insert>
	
	<insert id="insertpayment" parameterType="com.catDog.pay.Pay">
		INSERT INTO payment(requestNum, payMethod, point, purchase)
		VALUES(#{requestNum}, #{payMethod}, #{usePoint},#{purchase})
				
	</insert>
	
	<insert id="insertrefund" parameterType="com.catDog.pay.Pay">
		INSERT INTO refund(requestNum, refundAccount, bank)
		VALUES(#{requestNum}, #{refundAccount}, #{bank})
	</insert>
	
	<update id="updatePoint" parameterType="com.catDog.pay.Pay">
		UPDATE memberdetail SET mileage=#{mileage}+#{point} WHERE userid=#{userId}
	</update>
</mapper>