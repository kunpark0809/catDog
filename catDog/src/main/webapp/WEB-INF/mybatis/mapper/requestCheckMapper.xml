<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="request">
	
	<select id="readRequestDetail" parameterType="String" resultType="com.catDog.pay.Pay">
		select pr.productNum, requestDate ,pr.name productName,r.requestNum, c.num,c.name, r.total, r.addr1 deliverAddr1, r.addr2 deliverAddr2, r.zip deliverZip, r.tel deliverTel, r.name deliverName, r.memo, rd.status, p.payMethod, p.point usePoint, p.purchase,p.stackPoint point, 
		rd.requestDetailNum, rd.productCount, rd.productNum, rd.productSum, pr.imageFileName
		FROM request r
		JOIN customerdetail c ON r.num = c.num
		JOIN requestDetail rd ON r.requestNum = rd.requestNum
		JOIN product pr ON pr.productNum = rd.productNum
		JOIN payment p ON r.requestNum = p.requestNum
		WHERE  r.requestNum = #{requestNum}
	</select>
	
	<select id="readRequest" parameterType="map" resultType="com.catDog.pay.Pay">
		select pr.productNum, requestDate, pr.name productName, r.requestNum, c.num,c.name, rd.productSum, rd.status, rd.productCount, pr.imageFileName, rd.requestDetailNum
		from request r
		JOIN customerdetail c ON r.num = c.num
		JOIN requestDetail rd ON r.requestNum = rd.requestNum
		JOIN product pr ON pr.productNum = rd.productNum
		where c.num=#{num}
		order by requestDate desc
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<select id="readRequestNum" parameterType="map" resultType="com.catDog.pay.Pay">
		select r.requestNum, requestDate, requestDetailNum from request r 
        join customer c on c.num=r.num
        join requestDetail rd on r.requestNum = rd.requestNum
        where c.num=#{num}
		order by requestDate desc
	</select>
	
	<select id="readCumstomer" parameterType="Long" resultType="com.catDog.pay.Pay">
		SELECT md.num, cd.name, md.userId, md.mileage, cd.email, cd.tel, md.addr1, md.addr2, md.zip
		FROM customerDetail cd
		JOIN memberDetail md ON cd.num = md.num
		WHERE md.num = #{num}
	</select>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		select nvl(count(*), 0) from request r join customer c on c.num=r.num join requestDetail rd on r.requestNum=rd.requestNum where c.num=#{num}
	</select>
	
	<update id="requestCancle" parameterType="com.catDog.pay.Pay">
		update requestDetail set status=5 where requestNum=#{requestNum}
	</update>
	
	<insert id="refundRequest" parameterType="com.catDog.pay.Pay">
		insert into refund(requestDetailNum, refundAccount, bank, name, refundReason) values(#{requestDetailNum}, #{refundAccount}, #{bank}, #{name}, #{refundReason})
	</insert>
	
	<update id="requestRefund" parameterType="map">
		update requestDetail set status=6 where requestDetailNum IN
		<foreach item="requestDetailNum" collection="list" open="(" close=")" separator=",">
			#{requestDetailNum} 
		</foreach> 
	</update>
	
	<select id="readExpress" parameterType="String" resultType="com.catDog.pay.Pay">
		select requestNum, invoice, expressNum from deliver where requestNum=#{requestNum}
	</select>
	
	<insert id="swapRequest" parameterType="com.catDog.pay.Pay">
		insert into swap(requestDetailNum, swapReason) values(#{requestDetailNum}, #{swapReason})
	</insert>
	
	<update id="requestSwap" parameterType="com.catDog.pay.Pay">
		update requestDetail set status=8 where requestDetailNum=#{requestDetailNum}
	</update>
	
</mapper>